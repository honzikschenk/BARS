# Multi-stage Dockerfile for development
# syntax=docker/dockerfile:1

#################################
# Base stage with ROS2 Humble
#################################
FROM ros:humble-ros-base as base

# Set non-interactive frontend
ARG DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3-pip \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-vcstool \
    build-essential \
    cmake \
    git \
    wget \
    curl \
    vim \
    nano \
    tmux \
    gdb \
    valgrind \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
RUN pip3 install --no-cache-dir \
    numpy \
    scipy \
    matplotlib \
    PyYAML \
    pyserial \
    setuptools \
    pytest \
    black \
    flake8 \
    mypy

#################################
# Development stage
#################################
FROM base as development

# Install additional development tools
RUN apt-get update && apt-get install -y \
    bash-completion \
    less \
    tree \
    htop \
    iotop \
    net-tools \
    iputils-ping \
    ssh \
    rsync \
    && rm -rf /var/lib/apt/lists/*

# Set up workspace
WORKDIR /workspace
ENV ROS_WS=/workspace

# Initialize rosdep if not already done
RUN if [ ! -f /etc/ros/rosdep/sources.list.d/20-default.list ]; then \
        rosdep init; \
    fi

# Update rosdep
RUN rosdep update

# Setup environment for development
RUN echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc && \
    echo "export ROS_DOMAIN_ID=42" >> ~/.bashrc && \
    echo "export RCUTILS_LOGGING_BUFFERED_STREAM=1" >> ~/.bashrc && \
    echo "export RCUTILS_COLORIZED_OUTPUT=1" >> ~/.bashrc && \
    echo "alias ll='ls -alF'" >> ~/.bashrc && \
    echo "alias la='ls -A'" >> ~/.bashrc && \
    echo "alias l='ls -CF'" >> ~/.bashrc

# Create entrypoint script for development
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
# Setup ROS environment\n\
source /opt/ros/humble/setup.bash\n\
\n\
# Source workspace if built\n\
if [ -f /workspace/install/setup.bash ]; then\n\
    source /workspace/install/setup.bash\n\
fi\n\
\n\
# Execute command\n\
exec "$@"' > /entrypoint.sh && \
    chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]

#################################
# Production stage
#################################
FROM base as production

# Copy source code
COPY . /workspace/src/

# Set working directory
WORKDIR /workspace

# Install dependencies and build
RUN rosdep install --from-paths src --ignore-src -r -y && \
    . /opt/ros/humble/setup.sh && \
    colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release && \
    rm -rf build log src

# Setup environment
RUN echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc && \
    echo "source /workspace/install/setup.bash" >> ~/.bashrc && \
    echo "export ROS_DOMAIN_ID=42" >> ~/.bashrc

# Create entrypoint script
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
# Setup ROS environment\n\
source /opt/ros/humble/setup.bash\n\
source /workspace/install/setup.bash\n\
\n\
# Execute command\n\
exec "$@"' > /entrypoint.sh && \
    chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
CMD ["ros2", "launch", "bars_bringup", "bars.launch.py"]